{"version":3,"sources":["webpack:///./src/views/infra/network/ServiceProvidersTab.vue?8f83","webpack:///./src/views/infra/network/providers/ProviderItem.vue?34f4","webpack:///./src/views/infra/network/providers/ProviderDetail.vue?ce4b","webpack:///src/views/infra/network/providers/ProviderDetail.vue","webpack:///./src/views/infra/network/providers/ProviderDetail.vue?4518","webpack:///./src/views/infra/network/providers/ProviderDetail.vue","webpack:///./src/views/infra/network/providers/ProviderListView.vue?7971","webpack:///src/views/infra/network/providers/ProviderListView.vue","webpack:///./src/views/infra/network/providers/ProviderListView.vue?6bfb","webpack:///./src/views/infra/network/providers/ProviderListView.vue","webpack:///src/views/infra/network/providers/ProviderItem.vue","webpack:///./src/views/infra/network/providers/ProviderItem.vue?cb5d","webpack:///./src/views/infra/network/providers/ProviderItem.vue","webpack:///src/views/infra/network/ServiceProvidersTab.vue","webpack:///./src/views/infra/network/ServiceProvidersTab.vue?66d2","webpack:///./src/views/infra/network/ServiceProvidersTab.vue","webpack:///./src/views/infra/network/providers/ProviderListView.vue?d800"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","fetchLoading","device","on","onTabChange","_l","item","key","title","slot","_v","_s","$t","staticStyle","nsps","state","tabKey","loading","resource","id","zoneid","_e","currentAction","label","showFormAction","actionLoading","onCloseAction","component","tag","nsp","handleSubmit","form","field","index","name","directives","rawName","value","rules","required","message","expression","description","type","opt","idx","staticRenderFns","provider","actions","handleExecAction","details","list","data","columns","itemCount","page","pageSize","scopedSlots","_u","fn","join","components","Status","props","Array","default","Object","staticClass","listCols","dataSource","record","nvpdeviceid","resourceid","scrollable","text","role","path","hostid","$event","onConfigureOvs","onDelete","total","changePage","changePageSize","String","Boolean","Number","action","computed","length","forEach","col","dataIndex","push","inject","methods","providerChangePage","currentPage","hostname","apiName","confirmation","params","bcfdeviceid","ipaddress","lbdeviceid","vcsdeviceid","fwdeviceid","$confirm","content","onOk","enabled","executeDeleteRecord","Promise","obj","includes","res","jobId","json","resolve","reject","error","configureOvsElement","ActionButton","ProviderDetail","ProviderListView","itemNsp","resourceId","zoneId","listData","provide","watch","newValue","oldValue","fetchData","newData","keys","$set","provideSetNsp","mounted","physicalnetworkid","executeApi","responseName","objectName","count","result","e","provideExecuteAction","fetchOptions","listItem","ProviderItem","mixins","mixin","hardcodedNsps","beforeCreate","$form","createForm","setNsp","executeAction","provideCloseAction","provideReload","fetchServiceProvider","sps","addNetworkServiceProvider","confirm","fieldParams","args","map","api","method","listFieldOpts","possibleApi","mapping","opts","console","log","stack","promise","then","jobid","status","hasJobId"],"mappings":"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","file":"js/chunk-2fd1e3cd.c1fd4505.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-spin',{attrs:{\"spinning\":_vm.fetchLoading}},[_c('a-tabs',{attrs:{\"tabPosition\":_vm.device === 'mobile' ? 'top' : 'left',\"animated\":false},on:{\"change\":_vm.onTabChange}},_vm._l((_vm.hardcodedNsps),function(item){return _c('a-tab-pane',{key:item.title},[_c('span',{attrs:{\"slot\":\"tab\"},slot:\"tab\"},[_vm._v(\" \"+_vm._s(_vm.$t(item.title))+\" \"),_c('status',{staticStyle:{\"margin-bottom\":\"6px\",\"margin-left\":\"6px\"},attrs:{\"text\":item.title in _vm.nsps ? _vm.nsps[item.title].state : _vm.$t('label.disabled')}})],1),(_vm.tabKey===item.title)?_c('provider-item',{attrs:{\"loading\":_vm.loading,\"itemNsp\":item,\"nsp\":_vm.nsps[item.title],\"resourceId\":_vm.resource.id,\"zoneId\":_vm.resource.zoneid}}):_vm._e()],1)}),1)],1),(_vm.showFormAction)?_c('div',[(_vm.currentAction.component)?_c('keep-alive',[_c('a-modal',{staticStyle:{\"top\":\"20px\"},attrs:{\"title\":_vm.$t(_vm.currentAction.label),\"visible\":_vm.showFormAction,\"closable\":true,\"maskClosable\":false,\"cancelText\":_vm.$t('label.cancel'),\"confirmLoading\":_vm.actionLoading,\"footer\":null,\"centered\":\"\"},on:{\"cancel\":_vm.onCloseAction}},[_c(_vm.currentAction.component,{tag:\"component\",attrs:{\"resource\":_vm.nsp,\"action\":_vm.currentAction}})],1)],1):_c('a-modal',{staticStyle:{\"top\":\"20px\"},attrs:{\"title\":_vm.$t(_vm.currentAction.label),\"visible\":_vm.showFormAction,\"confirmLoading\":_vm.actionLoading,\"maskClosable\":false,\"okText\":_vm.$t('label.ok'),\"cancelText\":_vm.$t('label.cancel'),\"centered\":\"\"},on:{\"ok\":_vm.handleSubmit,\"cancel\":_vm.onCloseAction}},[_c('a-form',{attrs:{\"form\":_vm.form,\"layout\":\"vertical\"}},_vm._l((_vm.currentAction.fieldParams),function(field,index){return _c('a-form-item',{key:index,attrs:{\"label\":_vm.$t('label.' + field.name)}},[(field.name==='password')?_c('span',[_c('a-input-password',{directives:[{name:\"decorator\",rawName:\"v-decorator\",value:([field.name, {\n                rules: [\n                  {\n                    required: field.required,\n                    message: _vm.$t('message.error.required.input')\n                  }\n                ]\n              }]),expression:\"[field.name, {\\n                rules: [\\n                  {\\n                    required: field.required,\\n                    message: $t('message.error.required.input')\\n                  }\\n                ]\\n              }]\"}],attrs:{\"placeholder\":field.description}})],1):(field.type==='boolean')?_c('span',[_c('a-switch',{directives:[{name:\"decorator\",rawName:\"v-decorator\",value:([field.name, {\n                rules: [{\n                  required: field.required,\n                  message: _vm.$t('message.error.required.input')\n                }]\n              }]),expression:\"[field.name, {\\n                rules: [{\\n                  required: field.required,\\n                  message: $t('message.error.required.input')\\n                }]\\n              }]\"}],attrs:{\"placeholder\":field.description}})],1):(field.type==='uuid')?_c('span',[_c('a-select',{directives:[{name:\"decorator\",rawName:\"v-decorator\",value:([field.name, {\n                rules: [{\n                  required: field.required,\n                  message: _vm.$t('message.error.select')\n                }]\n              }]),expression:\"[field.name, {\\n                rules: [{\\n                  required: field.required,\\n                  message: $t('message.error.select')\\n                }]\\n              }]\"}],attrs:{\"loading\":field.loading,\"placeholder\":field.description}},_vm._l((field.opts),function(opt,idx){return _c('a-select-option',{key:idx},[_vm._v(_vm._s(opt.name || opt.description))])}),1)],1):_c('span',[_c('a-input',{directives:[{name:\"decorator\",rawName:\"v-decorator\",value:([field.name, {\n                rules: [\n                  {\n                    required: field.required,\n                    message: _vm.$t('message.error.required.input')\n                  }\n                ]\n              }]),expression:\"[field.name, {\\n                rules: [\\n                  {\\n                    required: field.required,\\n                    message: $t('message.error.required.input')\\n                  }\\n                ]\\n              }]\"}],attrs:{\"placeholder\":field.description}})],1)])}),1)],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-row',{attrs:{\"gutter\":12}},[_c('a-col',{staticStyle:{\"text-align\":\"left\"},attrs:{\"md\":24,\"lg\":24}},[_c('action-button',{attrs:{\"actions\":_vm.provider.actions,\"resource\":_vm.resource,\"loading\":_vm.loading},on:{\"exec-action\":_vm.handleExecAction}})],1)],1),_c('provider-detail',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"details\":_vm.provider.details,\"nsp\":_vm.resource,\"loading\":_vm.loading}}),_vm._l((_vm.listData),function(list,index){return _c('div',{key:index},[(_vm.resource.id)?_c('provider-list-view',{staticStyle:{\"border-top\":\"1px solid #ddd\",\"padding-top\":\"5px\"},attrs:{\"title\":list.title,\"action\":_vm.currentAction,\"dataSource\":list.data,\"columns\":list.columns,\"itemCount\":list.itemCount,\"resource\":_vm.resource,\"page\":_vm.page,\"pageSize\":_vm.pageSize,\"loading\":_vm.loading || list.loading}}):_vm._e()],1)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-list',{attrs:{\"size\":\"small\",\"dataSource\":_vm.details},scopedSlots:_vm._u([{key:\"renderItem\",fn:function(item){return _c('a-list-item',{},[_c('div',[_c('strong',[_vm._v(_vm._s(_vm.$t((\"label.\" + item))))]),_c('br'),(item === 'servicelist')?_c('div',[_vm._v(\" \"+_vm._s(_vm.nsp[item] ? _vm.nsp[item].join(', ') : '')+\" \")]):(item !== 'state')?_c('span',[_vm._v(_vm._s(_vm.nsp[item] ? _vm.nsp[item] : ''))]):_c('span',[_c('status',{attrs:{\"text\":_vm.nsp[item] ? _vm.nsp[item] : 'Disabled',\"displayText\":\"\"}})],1)])])}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n<template>\n  <div>\n    <a-list size=\"small\" :dataSource=\"details\">\n      <a-list-item slot=\"renderItem\" slot-scope=\"item\">\n        <div>\n          <strong>{{ $t(`label.${item}`) }}</strong>\n          <br />\n          <div v-if=\"item === 'servicelist'\">\n            {{ nsp[item] ? nsp[item].join(', ') : '' }}\n          </div>\n          <span v-else-if=\"item !== 'state'\">{{ nsp[item] ? nsp[item] : '' }}</span>\n          <span v-else>\n            <status :text=\"nsp[item] ? nsp[item] : 'Disabled'\" displayText />\n          </span>\n        </div>\n      </a-list-item>\n    </a-list>\n  </div>\n</template>\n\n<script>\nimport Status from '@/components/widgets/Status'\n\nexport default {\n  name: 'ProviderDetail',\n  components: {\n    Status\n  },\n  props: {\n    details: {\n      type: Array,\n      default: () => []\n    },\n    nsp: {\n      type: Object,\n      default: () => {}\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProviderDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProviderDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProviderDetail.vue?vue&type=template&id=cee063e8&scoped=true&\"\nimport script from \"./ProviderDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./ProviderDetail.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cee063e8\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('strong',[_vm._v(_vm._s(_vm.$t(_vm.title)))]),_c('a-table',{staticClass:\"row-list-data\",staticStyle:{\"margin-top\":\"10px\"},attrs:{\"size\":\"small\",\"loading\":_vm.loading,\"columns\":_vm.listCols,\"dataSource\":_vm.dataSource,\"rowKey\":function (record) { return record.id || record.name || record.nvpdeviceid || record.resourceid; },\"pagination\":false,\"scroll\":_vm.scrollable},scopedSlots:_vm._u([{key:\"name\",fn:function(text, record){return [(record.role==='VIRTUAL_ROUTER')?_c('span',[(record.id)?_c('router-link',{attrs:{\"to\":{ path: '/router' + '/' + record.id }}},[_vm._v(_vm._s(text))]):_c('label',[_vm._v(_vm._s(text))])],1):_c('span',[_vm._v(_vm._s(text))])]}},{key:\"hostname\",fn:function(text, record){return [(record.role==='VIRTUAL_ROUTER')?_c('span',[(record.hostid)?_c('router-link',{attrs:{\"to\":{ path: '/host' + '/' + record.hostid }}},[_vm._v(_vm._s(text))]):_c('label',[_vm._v(_vm._s(text))])],1):_c('span',[_vm._v(_vm._s(text))])]}},{key:\"zonename\",fn:function(text, record){return [(record.role==='VIRTUAL_ROUTER')?_c('span',[(record.zoneid)?_c('router-link',{attrs:{\"to\":{ path: '/zone' + '/' + record.zoneid }}},[_vm._v(_vm._s(text))]):_c('label',[_vm._v(_vm._s(text))])],1):_c('span',[_vm._v(_vm._s(text))])]}},{key:\"action\",fn:function(text, record){return [_c('a-tooltip',{attrs:{\"placement\":\"top\"}},[_c('template',{slot:\"title\"},[(_vm.resource.name==='BigSwitchBcf')?_c('span',[_vm._v(_vm._s(_vm.$t('label.delete.bigswitchbcf')))]):(_vm.resource.name==='BrocadeVcs')?_c('span',[_vm._v(_vm._s(_vm.$t('label.delete.brocadevcs')))]):(_vm.resource.name==='NiciraNvp')?_c('span',[_vm._v(_vm._s(_vm.$t('label.delete.niciranvp')))]):(_vm.resource.name==='F5BigIp')?_c('span',[_vm._v(_vm._s(_vm.$t('label.delete.f5')))]):(_vm.resource.name==='JuniperSRX')?_c('span',[_vm._v(_vm._s(_vm.$t('label.delete.srx')))]):(_vm.resource.name==='Netscaler')?_c('span',[_vm._v(_vm._s(_vm.$t('label.delete.netscaler')))]):(_vm.resource.name==='Opendaylight')?_c('span',[_vm._v(_vm._s(_vm.$t('label.delete.opendaylight.device')))]):(_vm.resource.name==='PaloAlto')?_c('span',[_vm._v(_vm._s(_vm.$t('label.delete.pa')))]):(_vm.resource.name==='CiscoVnmc' && _vm.title==='listCiscoVnmcResources')?_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('label.delete.ciscovnmc.resource'))+\" \")]):(_vm.resource.name==='CiscoVnmc' && _vm.title==='listCiscoAsa1000vResources')?_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('label.delete.ciscoasa1000v'))+\" \")]):_vm._e()]),(_vm.resource.name==='Ovs')?_c('a-button',{attrs:{\"type\":\"default\",\"shape\":\"circle\",\"icon\":\"setting\",\"size\":\"small\",\"loading\":_vm.actionLoading},on:{\"click\":function($event){return _vm.onConfigureOvs(record)}}}):_c('a-button',{attrs:{\"type\":\"danger\",\"shape\":\"circle\",\"icon\":\"close\",\"size\":\"small\",\"loading\":_vm.actionLoading},on:{\"click\":function($event){return _vm.onDelete(record)}}})],2)]}},{key:\"lbdevicestate\",fn:function(text){return [_c('status',{attrs:{\"text\":text ? text : '',\"displayText\":\"\"}})]}},{key:\"status\",fn:function(text){return [_c('status',{attrs:{\"text\":text ? text : '',\"displayText\":\"\"}})]}},{key:\"state\",fn:function(text){return [_c('status',{attrs:{\"text\":text ? text : '',\"displayText\":\"\"}})]}}])}),_c('a-pagination',{staticClass:\"row-pagination\",attrs:{\"size\":\"small\",\"current\":_vm.page,\"pageSize\":_vm.pageSize,\"total\":_vm.itemCount,\"showTotal\":function (total) { return ((_vm.$t('label.total')) + \" \" + total + \" \" + (_vm.$t('label.items'))); },\"pageSizeOptions\":['10', '20', '40', '80', '100'],\"showSizeChanger\":\"\",\"showQuickJumper\":\"\"},on:{\"change\":_vm.changePage,\"showSizeChange\":_vm.changePageSize},scopedSlots:_vm._u([{key:\"buildOptionText\",fn:function(props){return [_c('span',[_vm._v(_vm._s(props.value)+\" / \"+_vm._s(_vm.$t('label.page')))])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n<template>\n  <div>\n    <strong>{{ $t(title) }}</strong>\n    <a-table\n      style=\"margin-top: 10px;\"\n      size=\"small\"\n      class=\"row-list-data\"\n      :loading=\"loading\"\n      :columns=\"listCols\"\n      :dataSource=\"dataSource\"\n      :rowKey=\"record => record.id || record.name || record.nvpdeviceid || record.resourceid\"\n      :pagination=\"false\"\n      :scroll=\"scrollable\">\n      <template slot=\"name\" slot-scope=\"text, record\">\n        <span v-if=\"record.role==='VIRTUAL_ROUTER'\">\n          <router-link :to=\"{ path: '/router' + '/' + record.id }\" v-if=\"record.id\">{{ text }}</router-link>\n          <label v-else>{{ text }}</label>\n        </span>\n        <span v-else>{{ text }}</span>\n      </template>\n      <template slot=\"hostname\" slot-scope=\"text, record\">\n        <span v-if=\"record.role==='VIRTUAL_ROUTER'\">\n          <router-link :to=\"{ path: '/host' + '/' + record.hostid }\" v-if=\"record.hostid\">{{ text }}</router-link>\n          <label v-else>{{ text }}</label>\n        </span>\n        <span v-else>{{ text }}</span>\n      </template>\n      <template slot=\"zonename\" slot-scope=\"text, record\">\n        <span v-if=\"record.role==='VIRTUAL_ROUTER'\">\n          <router-link :to=\"{ path: '/zone' + '/' + record.zoneid }\" v-if=\"record.zoneid\">{{ text }}</router-link>\n          <label v-else>{{ text }}</label>\n        </span>\n        <span v-else>{{ text }}</span>\n      </template>\n      <template slot=\"action\" slot-scope=\"text, record\">\n        <a-tooltip placement=\"top\">\n          <template slot=\"title\">\n            <span v-if=\"resource.name==='BigSwitchBcf'\">{{ $t('label.delete.bigswitchbcf') }}</span>\n            <span v-else-if=\"resource.name==='BrocadeVcs'\">{{ $t('label.delete.brocadevcs') }}</span>\n            <span v-else-if=\"resource.name==='NiciraNvp'\">{{ $t('label.delete.niciranvp') }}</span>\n            <span v-else-if=\"resource.name==='F5BigIp'\">{{ $t('label.delete.f5') }}</span>\n            <span v-else-if=\"resource.name==='JuniperSRX'\">{{ $t('label.delete.srx') }}</span>\n            <span v-else-if=\"resource.name==='Netscaler'\">{{ $t('label.delete.netscaler') }}</span>\n            <span v-else-if=\"resource.name==='Opendaylight'\">{{ $t('label.delete.opendaylight.device') }}</span>\n            <span v-else-if=\"resource.name==='PaloAlto'\">{{ $t('label.delete.pa') }}</span>\n            <span v-else-if=\"resource.name==='CiscoVnmc' && title==='listCiscoVnmcResources'\">\n              {{ $t('label.delete.ciscovnmc.resource') }}\n            </span>\n            <span v-else-if=\"resource.name==='CiscoVnmc' && title==='listCiscoAsa1000vResources'\">\n              {{ $t('label.delete.ciscoasa1000v') }}\n            </span>\n          </template>\n          <a-button\n            v-if=\"resource.name==='Ovs'\"\n            type=\"default\"\n            shape=\"circle\"\n            icon=\"setting\"\n            size=\"small\"\n            :loading=\"actionLoading\"\n            @click=\"onConfigureOvs(record)\"/>\n          <a-button\n            v-else\n            type=\"danger\"\n            shape=\"circle\"\n            icon=\"close\"\n            size=\"small\"\n            :loading=\"actionLoading\"\n            @click=\"onDelete(record)\"/>\n        </a-tooltip>\n      </template>\n      <template slot=\"lbdevicestate\" slot-scope=\"text\">\n        <status :text=\"text ? text : ''\" displayText />\n      </template>\n      <template slot=\"status\" slot-scope=\"text\">\n        <status :text=\"text ? text : ''\" displayText />\n      </template>\n      <template slot=\"state\" slot-scope=\"text\">\n        <status :text=\"text ? text : ''\" displayText />\n      </template>\n    </a-table>\n    <a-pagination\n      size=\"small\"\n      class=\"row-pagination\"\n      :current=\"page\"\n      :pageSize=\"pageSize\"\n      :total=\"itemCount\"\n      :showTotal=\"total => `${$t('label.total')} ${total} ${$t('label.items')}`\"\n      :pageSizeOptions=\"['10', '20', '40', '80', '100']\"\n      @change=\"changePage\"\n      @showSizeChange=\"changePageSize\"\n      showSizeChanger\n      showQuickJumper>\n      <template slot=\"buildOptionText\" slot-scope=\"props\">\n        <span>{{ props.value }} / {{ $t('label.page') }}</span>\n      </template>\n    </a-pagination>\n  </div>\n</template>\n\n<script>\nimport { api } from '@/api'\nimport Status from '@/components/widgets/Status'\n\nexport default {\n  name: 'ProviderListView',\n  components: { Status },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    columns: {\n      type: Array,\n      required: true\n    },\n    dataSource: {\n      type: Array,\n      default: () => []\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    page: {\n      type: Number,\n      default: () => 1\n    },\n    pageSize: {\n      type: Number,\n      default: () => 10\n    },\n    itemCount: {\n      type: Number,\n      default: () => 0\n    },\n    resource: {\n      type: Object,\n      default: () => {}\n    },\n    action: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data () {\n    return {\n      actionLoading: false\n    }\n  },\n  computed: {\n    scrollable () {\n      if (this.dataSource.length === 0) {\n        return { y: '60vh', x: 'auto' }\n      } else if (this.columns.length > 3) {\n        return { y: '60vh', x: '50vw' }\n      }\n\n      return { y: '60vh' }\n    },\n    listCols () {\n      const columns = []\n      this.columns.forEach(col => {\n        if (col.dataIndex === 'hostname' && this.resource.name === 'BigSwitchBcf') {\n          col.title = this.$t('label.bigswitch.controller.address')\n        }\n        if (col.dataIndex === 'hostname' && this.resource.name === 'BrocadeVcs') {\n          col.title = this.$t('label.brocade.vcs.address')\n        }\n        columns.push(col)\n      })\n      return columns\n    }\n  },\n  inject: ['providerChangePage', 'provideReload', 'parentPollActionCompletion'],\n  methods: {\n    changePage (page, pageSize) {\n      this.providerChangePage(this.title, page, pageSize)\n    },\n    changePageSize (currentPage, pageSize) {\n      this.providerChangePage(this.title, currentPage, pageSize)\n    },\n    onDelete (record) {\n      let apiName\n      let confirmation\n      let label\n      let name\n      const params = {}\n      switch (this.resource.name) {\n        case 'BigSwitchBcf':\n          label = 'label.delete.bigswitchbcf'\n          name = record.hostname\n          apiName = 'deleteBigSwitchBcfDevice'\n          confirmation = 'message.confirm.delete.bigswitchbcf'\n          params.bcfdeviceid = record.bcfdeviceid\n          break\n        case 'F5BigIp':\n          label = 'label.delete.f5'\n          name = record.ipaddress\n          apiName = 'deleteF5LoadBalancer'\n          confirmation = 'message.confirm.delete.f5'\n          params.lbdeviceid = record.lbdeviceid\n          break\n        case 'NiciraNvp':\n          label = 'label.delete.niciranvp'\n          name = record.hostname\n          apiName = 'deleteNiciraNvpDevice'\n          confirmation = 'message.confirm.delete.niciranvp'\n          params.nvpdeviceid = record.nvpdeviceid\n          break\n        case 'BrocadeVcs':\n          label = 'label.delete.brocadevcs'\n          name = record.hostname\n          apiName = 'deleteBrocadeVcsDevice'\n          confirmation = 'message.confirm.delete.brocadevcs'\n          params.vcsdeviceid = record.vcsdeviceid\n          break\n        case 'JuniperSRX':\n          label = 'label.delete.srx'\n          name = record.ipaddress\n          apiName = 'deleteSrxFirewall'\n          confirmation = 'message.confirm.delete.srx'\n          params.fwdeviceid = record.fwdeviceid\n          break\n        case 'Netscaler':\n          label = 'label.delete.netscaler'\n          name = record.ipaddress\n          apiName = 'deleteNetscalerLoadBalancer'\n          confirmation = 'message.confirm.delete.netscaler'\n          params.lbdeviceid = record.lbdeviceid\n          break\n        case 'Opendaylight':\n          label = 'label.delete.opendaylight.device'\n          name = record.name\n          apiName = 'deleteOpenDaylightController'\n          confirmation = 'message.confirm.delete.Opendaylight'\n          params.id = record.id\n          break\n        case 'PaloAlto':\n          label = 'label.delete.PA'\n          name = record.ipaddress\n          apiName = 'deletePaloAltoFirewall'\n          confirmation = 'message.confirm.delete.pa'\n          params.fwdeviceid = record.fwdeviceid\n          break\n        case 'CiscoVnmc':\n          if (this.title === 'listCiscoVnmcResources') {\n            label = 'label.delete.ciscovnmc.resource'\n            apiName = 'deleteCiscoVnmcResource'\n            confirmation = 'message.confirm.delete.ciscovnmc.resource'\n          } else {\n            label = 'label.delete.ciscoasa1000v'\n            apiName = 'deleteCiscoAsa1000vResource'\n            confirmation = 'message.confirm.delete.ciscoasa1000v'\n          }\n\n          name = record.hostname\n          params.resourceid = record.resourceid\n          break\n        default:\n          break\n      }\n\n      this.$confirm({\n        title: this.$t('label.confirmation'),\n        content: this.$t(confirmation),\n        onOk: async () => {\n          if (apiName) {\n            this.actionLoading = true\n            try {\n              const jobId = await this.executeDeleteRecord(apiName, params)\n              if (jobId) {\n                this.$store.dispatch('AddAsyncJob', {\n                  title: this.$t(label),\n                  jobid: jobId,\n                  description: this.$t(name),\n                  status: 'progress'\n                })\n                this.parentPollActionCompletion(jobId, this.action)\n              } else {\n                this.$success('Success')\n                this.provideReload()\n              }\n              this.actionLoading = false\n            } catch (error) {\n              this.actionLoading = false\n              this.$notification.error({\n                message: this.$t('message.request.failed'),\n                description: (error.response && error.response.headers && error.response.headers['x-description']) || error.message\n              })\n            }\n          }\n        }\n      })\n    },\n    onConfigureOvs (record) {\n      const params = {}\n      params.id = record.id\n      params.enabled = true\n\n      this.$confirm({\n        title: this.$t('label.confirmation'),\n        content: this.$t('message.confirm.configure.ovs'),\n        onOk: async () => {\n          this.actionLoading = true\n          try {\n            const jobId = await this.configureOvsElement(params)\n            if (jobId) {\n              this.$store.dispatch('AddAsyncJob', {\n                title: this.$t('label.configure.ovs'),\n                jobid: jobId,\n                description: this.$t(record.id),\n                status: 'progress'\n              })\n              this.parentPollActionCompletion(jobId, this.action)\n            } else {\n              this.$success('Success')\n              this.provideReload()\n            }\n            this.actionLoading = false\n          } catch (error) {\n            this.actionLoading = false\n            this.$notification.error({\n              message: this.$t('message.request.failed'),\n              description: (error.response && error.response.headers && error.response.headers['x-description']) || error.message\n            })\n          }\n        }\n      })\n    },\n    executeDeleteRecord (apiName, args) {\n      return new Promise((resolve, reject) => {\n        let jobId = null\n        api(apiName, args).then(json => {\n          for (const obj in json) {\n            if (obj.includes('response')) {\n              for (const res in json[obj]) {\n                if (res === 'jobid') {\n                  jobId = json[obj][res]\n                  break\n                }\n              }\n              break\n            }\n          }\n\n          resolve(jobId)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n    configureOvsElement (args) {\n      return new Promise((resolve, reject) => {\n        api('configureOvsElement', args).then(json => {\n          const jobId = json.configureovselementresponse.jobid\n          resolve(jobId)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"less\">\n.row-pagination {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  text-align: right;\n}\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProviderListView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProviderListView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProviderListView.vue?vue&type=template&id=3f49cdb1&scoped=true&\"\nimport script from \"./ProviderListView.vue?vue&type=script&lang=js&\"\nexport * from \"./ProviderListView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ProviderListView.vue?vue&type=style&index=0&id=3f49cdb1&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3f49cdb1\",\n  null\n  \n)\n\nexport default component.exports","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n<template>\n  <div>\n    <a-row :gutter=\"12\">\n      <a-col :md=\"24\" :lg=\"24\" style=\"text-align: left\">\n        <action-button\n          :actions=\"provider.actions\"\n          :resource=\"resource\"\n          :loading=\"loading\"\n          @exec-action=\"handleExecAction\"/>\n      </a-col>\n    </a-row>\n    <provider-detail\n      style=\"margin-top: 10px\"\n      :details=\"provider.details\"\n      :nsp=\"resource\"\n      :loading=\"loading\" />\n    <div\n      v-for=\"(list, index) in listData\"\n      :key=\"index\">\n      <provider-list-view\n        style=\"border-top: 1px solid #ddd; padding-top: 5px;\"\n        v-if=\"resource.id\"\n        :title=\"list.title\"\n        :action=\"currentAction\"\n        :dataSource=\"list.data\"\n        :columns=\"list.columns\"\n        :itemCount=\"list.itemCount\"\n        :resource=\"resource\"\n        :page=\"page\"\n        :pageSize=\"pageSize\"\n        :loading=\"loading || list.loading\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { api } from '@/api'\nimport ActionButton from '@/components/view/ActionButton'\nimport ProviderDetail from '@/views/infra/network/providers/ProviderDetail'\nimport ProviderListView from '@/views/infra/network/providers/ProviderListView'\n\nexport default {\n  name: 'ProviderItem',\n  components: {\n    ActionButton,\n    ProviderDetail,\n    ProviderListView\n  },\n  props: {\n    itemNsp: {\n      type: Object,\n      required: true\n    },\n    nsp: {\n      type: Object,\n      default: () => {}\n    },\n    resourceId: {\n      type: String,\n      default: () => ''\n    },\n    zoneId: {\n      type: String,\n      default: () => ''\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      provider: {},\n      listData: {},\n      resource: {},\n      currentAction: {},\n      page: 1,\n      pageSize: 10,\n      itemCount: 0\n    }\n  },\n  provide () {\n    return {\n      providerChangePage: this.changePage\n    }\n  },\n  inject: ['provideSetNsp', 'provideExecuteAction'],\n  watch: {\n    loading (newValue, oldValue) {\n      if (newValue !== oldValue && !newValue) {\n        this.fetchData()\n      }\n    },\n    nsp (newData, oldData) {\n      if (newData && Object.keys(newData).length > 0) {\n        this.nsp = newData\n        this.resource = this.nsp\n        this.$set(this.resource, 'zoneid', this.zoneId)\n        this.provideSetNsp(this.resource)\n        this.fetchData()\n      }\n    }\n  },\n  mounted () {\n    if (!this.nsp || Object.keys(this.nsp).length === 0) {\n      this.resource = {\n        name: this.itemNsp.title,\n        state: 'Disabled',\n        physicalnetworkid: this.resourceId,\n        zoneid: this.zoneId\n      }\n    } else {\n      this.resource = this.nsp\n      this.$set(this.resource, 'zoneid', this.zoneId)\n    }\n    if (this.itemNsp && Object.keys(this.itemNsp).length > 0) {\n      this.provider = this.itemNsp\n      this.provideSetNsp(this.resource)\n      this.fetchData()\n    }\n  },\n  methods: {\n    async fetchData () {\n      if (!this.provider.lists || this.provider.lists.length === 0) {\n        return\n      }\n      this.provider.lists.map(this.fetchOptions)\n    },\n    async fetchOptions (args) {\n      if (!args || Object.keys(args).length === 0) {\n        return\n      }\n\n      const params = {}\n      if (args.mapping) {\n        Object.keys(args.mapping).map(key => {\n          params[key] = 'value' in args.mapping[key] ? args.mapping[key].value(this.resource) : null\n        })\n      }\n      params.page = this.page\n      params.pageSize = this.pageSize\n\n      let length = args.columns.length\n      if (args.columns.includes('action')) {\n        length--\n      }\n      const columns = args.columns.map(col => {\n        if (col === 'action') {\n          return {\n            title: this.$t('label.' + col),\n            dataIndex: col,\n            width: 80,\n            fixed: 'right',\n            scopedSlots: { customRender: col }\n          }\n        }\n        const width = 100 / (length) + '%'\n        return {\n          title: this.$t('label.' + col),\n          width: width,\n          dataIndex: col,\n          scopedSlots: { customRender: col }\n        }\n      })\n\n      this.listData[args.title] = {\n        title: args.title,\n        columns: columns,\n        data: [],\n        itemCount: 0,\n        loading: true\n      }\n\n      try {\n        const listResult = await this.executeApi(args.api, params)\n        this.listData[args.title].data = listResult.data\n        this.listData[args.title].itemCount = listResult.itemCount\n        this.listData[args.title].loading = false\n      } catch (error) {\n        this.listData[args.title].loading = false\n        this.$notification.error({\n          message: this.$t('message.request.failed'),\n          description: (error.response && error.response.headers && error.response.headers['x-description']) || error.message\n        })\n      }\n      this.$forceUpdate()\n    },\n    executeApi (apiName, params) {\n      return new Promise((resolve, reject) => {\n        api(apiName, params).then(json => {\n          let responseName\n          let objectName\n          let itemCount = 0\n          const result = {\n            data: [],\n            itemCount: 0\n          }\n          for (const key in json) {\n            if (key.includes('response') || key.includes(apiName)) {\n              responseName = key\n              break\n            }\n          }\n          if (!responseName) {\n            resolve(result)\n            return\n          }\n          for (const key in json[responseName]) {\n            if (key === 'count') {\n              itemCount = json[responseName].count\n              continue\n            }\n            objectName = key\n            break\n          }\n          result.data = json[responseName][objectName] || []\n          result.itemCount = itemCount\n          resolve(result)\n        }).catch(e => {\n          reject(e)\n        })\n      })\n    },\n    handleExecAction (action) {\n      this.currentAction = action\n      this.provideExecuteAction(action)\n    },\n    changePage (listName, page, pageSize) {\n      this.page = page\n      this.pageSize = pageSize\n      const listItem = this.provider.lists.filter(provider => provider.title === listName)[0] || {}\n      this.fetchOptions(listItem)\n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProviderItem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProviderItem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProviderItem.vue?vue&type=template&id=f2dd03f6&scoped=true&\"\nimport script from \"./ProviderItem.vue?vue&type=script&lang=js&\"\nexport * from \"./ProviderItem.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f2dd03f6\",\n  null\n  \n)\n\nexport default component.exports","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n<template>\n  <div>\n    <a-spin :spinning=\"fetchLoading\">\n      <a-tabs\n        :tabPosition=\"device === 'mobile' ? 'top' : 'left'\"\n        :animated=\"false\"\n        @change=\"onTabChange\">\n        <a-tab-pane\n          v-for=\"item in hardcodedNsps\"\n          :key=\"item.title\">\n          <span slot=\"tab\">\n            {{ $t(item.title) }}\n            <status :text=\"item.title in nsps ? nsps[item.title].state : $t('label.disabled')\" style=\"margin-bottom: 6px; margin-left: 6px\" />\n          </span>\n          <provider-item\n            v-if=\"tabKey===item.title\"\n            :loading=\"loading\"\n            :itemNsp=\"item\"\n            :nsp=\"nsps[item.title]\"\n            :resourceId=\"resource.id\"\n            :zoneId=\"resource.zoneid\"/>\n        </a-tab-pane>\n      </a-tabs>\n    </a-spin>\n    <div v-if=\"showFormAction\">\n      <keep-alive v-if=\"currentAction.component\">\n        <a-modal\n          :title=\"$t(currentAction.label)\"\n          :visible=\"showFormAction\"\n          :closable=\"true\"\n          :maskClosable=\"false\"\n          :cancelText=\"$t('label.cancel')\"\n          style=\"top: 20px;\"\n          @cancel=\"onCloseAction\"\n          :confirmLoading=\"actionLoading\"\n          :footer=\"null\"\n          centered>\n          <component\n            :is=\"currentAction.component\"\n            :resource=\"nsp\"\n            :action=\"currentAction\" />\n        </a-modal>\n      </keep-alive>\n      <a-modal\n        v-else\n        :title=\"$t(currentAction.label)\"\n        :visible=\"showFormAction\"\n        :confirmLoading=\"actionLoading\"\n        :maskClosable=\"false\"\n        :okText=\"$t('label.ok')\"\n        :cancelText=\"$t('label.cancel')\"\n        style=\"top: 20px;\"\n        @ok=\"handleSubmit\"\n        @cancel=\"onCloseAction\"\n        centered\n      >\n        <a-form\n          :form=\"form\"\n          layout=\"vertical\">\n          <a-form-item\n            v-for=\"(field, index) in currentAction.fieldParams\"\n            :key=\"index\"\n            :label=\"$t('label.' + field.name)\">\n            <span v-if=\"field.name==='password'\">\n              <a-input-password\n                v-decorator=\"[field.name, {\n                  rules: [\n                    {\n                      required: field.required,\n                      message: $t('message.error.required.input')\n                    }\n                  ]\n                }]\"\n                :placeholder=\"field.description\" />\n            </span>\n            <span v-else-if=\"field.type==='boolean'\">\n              <a-switch\n                v-decorator=\"[field.name, {\n                  rules: [{\n                    required: field.required,\n                    message: $t('message.error.required.input')\n                  }]\n                }]\"\n                :placeholder=\"field.description\"\n              />\n            </span>\n            <span v-else-if=\"field.type==='uuid'\">\n              <a-select\n                v-decorator=\"[field.name, {\n                  rules: [{\n                    required: field.required,\n                    message: $t('message.error.select')\n                  }]\n                }]\"\n                :loading=\"field.loading\"\n                :placeholder=\"field.description\">\n                <a-select-option\n                  v-for=\"(opt, idx) in field.opts\"\n                  :key=\"idx\">{{ opt.name || opt.description }}</a-select-option>\n              </a-select>\n            </span>\n            <span v-else>\n              <a-input\n                v-decorator=\"[field.name, {\n                  rules: [\n                    {\n                      required: field.required,\n                      message: $t('message.error.required.input')\n                    }\n                  ]\n                }]\"\n                :placeholder=\"field.description\" />\n            </span>\n          </a-form-item>\n        </a-form>\n      </a-modal>\n    </div>\n  </div>\n</template>\n\n<script>\nimport store from '@/store'\nimport { api } from '@/api'\nimport { mixinDevice } from '@/utils/mixin.js'\nimport Status from '@/components/widgets/Status'\nimport ProviderItem from '@/views/infra/network/providers/ProviderItem'\n\nexport default {\n  name: 'ServiceProvidersTab',\n  components: {\n    Status,\n    ProviderItem\n  },\n  mixins: [mixinDevice],\n  props: {\n    resource: {\n      type: Object,\n      required: true\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      nsps: {},\n      nsp: {},\n      fetchLoading: false,\n      actionLoading: false,\n      showFormAction: false,\n      currentAction: {},\n      tabKey: 'BaremetalDhcpProvider'\n    }\n  },\n  computed: {\n    hardcodedNsps () {\n      return [\n        {\n          title: 'BaremetalDhcpProvider',\n          actions: [\n            {\n              api: 'addBaremetalDhcp',\n              listView: true,\n              icon: 'plus',\n              label: 'label.add.baremetal.dhcp.device',\n              args: ['url', 'username', 'password'],\n              mapping: {\n                dhcpservertype: {\n                  value: (record) => { return 'DHCPD' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return (record && record.id && record.state === 'Enabled') },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return (record && record.id && record.state === 'Disabled') },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.baremetal.dhcp.devices',\n              api: 'listBaremetalDhcp',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['url']\n            }\n          ]\n        },\n        {\n          title: 'BaremetalPxeProvider',\n          actions: [\n            {\n              api: 'addBaremetalPxeKickStartServer',\n              listView: true,\n              icon: 'plus',\n              label: 'label.baremetal.pxe.device',\n              args: ['url', 'username', 'password', 'tftpdir'],\n              mapping: {\n                pxeservertype: {\n                  value: (record) => { return 'KICK_START' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return (record && record.id && record.state === 'Enabled') },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return (record && record.id && record.state === 'Disabled') },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.baremetal.pxe.devices',\n              api: 'listBaremetalPxeServers',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['url']\n            }\n          ]\n        },\n        {\n          title: 'BigSwitchBcf',\n          actions: [\n            {\n              api: 'addBigSwitchBcfDevice',\n              listView: true,\n              icon: 'plus',\n              label: 'label.add.bigswitchbcf.device',\n              args: ['hostname', 'username', 'password', 'nat']\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.devices',\n              api: 'listBigSwitchBcfDevices',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['hostname', 'action']\n            }\n          ]\n        },\n        {\n          title: 'BrocadeVcs',\n          actions: [\n            {\n              api: 'addBrocadeVcsDevice',\n              listView: true,\n              icon: 'plus',\n              label: 'label.add.bigswitchbcf.device',\n              args: ['hostname', 'username', 'password']\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.devices',\n              api: 'listBrocadeVcsDevices',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['hostname', 'action']\n            }\n          ]\n        },\n        {\n          title: 'CiscoVnmc',\n          actions: [\n            {\n              api: 'addCiscoVnmcResource',\n              listView: true,\n              icon: 'plus',\n              label: 'label.add.vnmc.device',\n              args: ['hostname', 'username', 'password']\n            },\n            {\n              api: 'addCiscoAsa1000vResource',\n              listView: true,\n              icon: 'plus-circle',\n              label: 'label.add.ciscoasa1000v',\n              args: ['hostname', 'insideportprofile', 'clusterid'],\n              mapping: {\n                zoneid: {\n                  params: (record) => { return record.zoneid }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.list.ciscovnmc',\n              api: 'listCiscoVnmcResources',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['resource', 'provider']\n            },\n            {\n              title: 'label.list.ciscoasa1000v',\n              api: 'listCiscoAsa1000vResources',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['hostname', 'insideportprofile', 'action']\n            }\n          ]\n        },\n        {\n          title: 'ConfigDrive',\n          actions: [\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist', 'physicalnetworkid']\n        },\n        {\n          title: 'F5BigIp',\n          actions: [\n            {\n              api: 'addF5LoadBalancer',\n              listView: true,\n              icon: 'plus',\n              label: 'label.add.f5.device',\n              component: () => import('@/views/infra/network/providers/AddF5LoadBalancer.vue')\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.devices',\n              api: 'listF5LoadBalancers',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['ipaddress', 'lbdevicestate', 'action']\n            }\n          ]\n        },\n        {\n          title: 'GloboDns',\n          actions: [\n            {\n              api: 'addGloboDnsHost',\n              listView: true,\n              icon: 'plus',\n              label: 'label.globo.dns.configuration',\n              args: ['url', 'username', 'password']\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist']\n        },\n        {\n          title: 'InternalLbVm',\n          actions: [\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            }\n          ],\n          details: ['name', 'state', 'id', 'physicalnetworkid', 'destinationphysicalnetworkid', 'servicelist'],\n          lists: [\n            {\n              title: 'label.instances',\n              api: 'listInternalLoadBalancerVMs',\n              mapping: {\n                zoneid: {\n                  value: (record) => { return record.zoneid }\n                }\n              },\n              columns: ['name', 'zonename', 'type', 'state']\n            }\n          ]\n        },\n        {\n          title: 'JuniperSRX',\n          actions: [\n            {\n              api: 'addSrxFirewall',\n              listView: true,\n              icon: 'plus',\n              label: 'label.add.srx.device',\n              component: () => import('@/views/infra/network/providers/AddSrxFirewall.vue')\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.devices',\n              api: 'listSrxFirewalls',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['ipaddress', 'fwdevicestate', 'action']\n            }\n          ]\n        },\n        {\n          title: 'Netscaler',\n          actions: [\n            {\n              api: 'addNetscalerLoadBalancer',\n              icon: 'plus',\n              listView: true,\n              label: 'label.add.netscaler.device',\n              component: () => import('@/views/infra/network/providers/AddNetscalerLoadBalancer.vue')\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.devices',\n              api: 'listNetscalerLoadBalancers',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['ipaddress', 'lbdevicestate', 'action']\n            }\n          ]\n        },\n        {\n          title: 'NiciraNvp',\n          actions: [\n            {\n              api: 'addNiciraNvpDevice',\n              icon: 'plus',\n              listView: true,\n              label: 'label.add.niciranvp.device',\n              component: () => import('@/views/infra/network/providers/AddNiciraNvpDevice.vue')\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.devices',\n              api: 'listNiciraNvpDevices',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['hostname', 'transportzoneuuid', 'l3gatewayserviceuuid', 'l2gatewayserviceuuid', 'action']\n            }\n          ]\n        },\n        {\n          title: 'Opendaylight',\n          actions: [\n            {\n              api: 'addOpenDaylightController',\n              listView: true,\n              icon: 'plus',\n              label: 'label.add.opendaylight.device',\n              args: ['url', 'username', 'password']\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.opendaylight.controllers',\n              api: 'listOpenDaylightControllers',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['name', 'url', 'username', 'action']\n            }\n          ]\n        },\n        {\n          title: 'Ovs',\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'listOvsElements',\n              api: 'listOvsElements',\n              mapping: {\n                nspid: {\n                  value: (record) => { return record.id }\n                }\n              },\n              columns: ['account', 'domain', 'enabled', 'project', 'action']\n            }\n          ]\n        },\n        {\n          title: 'PaloAlto',\n          actions: [\n            {\n              api: 'addPaloAltoFirewall',\n              listView: true,\n              icon: 'plus',\n              label: 'label.add.pa.device',\n              component: () => import('@/views/infra/network/providers/AddPaloAltoFirewall.vue')\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return (record && record.id && record.state === 'Enabled') },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return (record && record.id && record.state === 'Disabled') },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            },\n            {\n              api: 'deleteNetworkServiceProvider',\n              listView: true,\n              icon: 'poweroff',\n              label: 'label.shutdown.provider',\n              confirm: 'message.confirm.delete.provider',\n              show: (record) => { return record && record.id }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.devices',\n              api: 'listPaloAltoFirewalls',\n              mapping: {\n                physicalnetworkid: {\n                  value: (record) => { return record.physicalnetworkid }\n                }\n              },\n              columns: ['ipaddress', 'fwdevicestate', 'type', 'action']\n            }\n          ]\n        },\n        // {\n        //   title: 'SecurityGroupProvider',\n        //   details: ['name', 'state', 'id', 'servicelist'],\n        // },\n        {\n          title: 'VirtualRouter',\n          actions: [\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.instances',\n              api: 'listRouters',\n              mapping: {\n                listAll: {\n                  value: (record) => { return true }\n                },\n                zoneid: {\n                  value: (record) => { return record.zoneid }\n                },\n                forvpc: {\n                  value: (record) => { return false }\n                }\n              },\n              columns: ['name', 'state', 'hostname', 'zonename']\n            }\n          ]\n        },\n        {\n          title: 'VpcVirtualRouter',\n          actions: [\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'stop',\n              listView: true,\n              label: 'label.disable.provider',\n              confirm: 'message.confirm.disable.provider',\n              show: (record) => { return record && record.id && record.state === 'Enabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Disabled' }\n                }\n              }\n            },\n            {\n              api: 'updateNetworkServiceProvider',\n              icon: 'play-circle',\n              listView: true,\n              label: 'label.enable.provider',\n              confirm: 'message.confirm.enable.provider',\n              show: (record) => { return record && record.id && record.state === 'Disabled' },\n              mapping: {\n                state: {\n                  value: (record) => { return 'Enabled' }\n                }\n              }\n            }\n          ],\n          details: ['name', 'state', 'id', 'servicelist'],\n          lists: [\n            {\n              title: 'label.instances',\n              api: 'listRouters',\n              mapping: {\n                forvpc: {\n                  value: (record) => { return true }\n                },\n                zoneid: {\n                  value: (record) => { return record.zoneid }\n                },\n                listAll: {\n                  value: () => { return true }\n                }\n              },\n              columns: ['name', 'state', 'hostname', 'zonename']\n            }\n          ]\n        }\n      ]\n    }\n  },\n  beforeCreate () {\n    this.form = this.$form.createForm(this)\n  },\n  mounted () {\n    this.fetchData()\n  },\n  watch: {\n    loading (newData, oldData) {\n      if (!newData && this.resource.id) {\n        this.fetchData()\n      }\n    }\n  },\n  inject: ['parentPollActionCompletion'],\n  provide () {\n    return {\n      provideSetNsp: this.setNsp,\n      provideExecuteAction: this.executeAction,\n      provideCloseAction: this.onCloseAction,\n      provideReload: this.fetchData\n    }\n  },\n  methods: {\n    fetchData () {\n      this.fetchServiceProvider()\n    },\n    fetchServiceProvider (name) {\n      this.fetchLoading = true\n      api('listNetworkServiceProviders', { physicalnetworkid: this.resource.id, name: name }).then(json => {\n        const sps = json.listnetworkserviceprovidersresponse.networkserviceprovider || []\n        if (sps.length > 0) {\n          for (const sp of sps) {\n            this.nsps[sp.name] = sp\n          }\n        }\n      }).catch(error => {\n        this.$notifyError(error)\n      }).finally(() => {\n        this.fetchLoading = false\n      })\n    },\n    onTabChange (tabKey) {\n      this.tabKey = tabKey\n    },\n    setNsp (nsp) {\n      this.nsp = nsp\n    },\n    async handleSubmit () {\n      if (this.currentAction.confirm) {\n        await this.executeConfirmAction()\n        return\n      }\n\n      await this.form.validateFields(async (err, values) => {\n        if (err) {\n          return\n        }\n        const params = {}\n        params.physicalnetworkid = this.nsp.physicalnetworkid\n        for (const key in values) {\n          const input = values[key]\n          for (const param of this.currentAction.fieldParams) {\n            if (param.name !== key) {\n              continue\n            }\n            if (param.type === 'uuid') {\n              params[key] = param.opts[input].id\n            } else if (param.type === 'list') {\n              params[key] = input.map(e => { return param.opts[e].id }).reduce((str, name) => { return str + ',' + name })\n            } else {\n              params[key] = input\n            }\n          }\n        }\n        if (this.currentAction.mapping) {\n          for (const key in this.currentAction.mapping) {\n            if (!this.currentAction.mapping[key].value) {\n              continue\n            }\n            params[key] = this.currentAction.mapping[key].value(this.resource, params)\n          }\n        }\n        this.actionLoading = true\n\n        try {\n          if (!this.nsp.id) {\n            const serviceParams = {}\n            serviceParams.name = this.nsp.name\n            serviceParams.physicalnetworkid = this.nsp.physicalnetworkid\n            const networkServiceProvider = await this.addNetworkServiceProvider(serviceParams)\n            this.nsp = { ...this.nsp, ...networkServiceProvider }\n          }\n          params.id = this.nsp.id\n          const hasJobId = await this.executeApi(this.currentAction.api, params, this.currentAction.method)\n          if (!hasJobId) {\n            await this.$message.success('Success')\n            await this.fetchData()\n          }\n          this.actionLoading = false\n          this.onCloseAction()\n        } catch (error) {\n          this.actionLoading = false\n          this.$notification.error({\n            message: this.$t('message.request.failed'),\n            description: error\n          })\n        }\n      })\n    },\n    onCloseAction () {\n      this.currentAction = {}\n      this.showFormAction = false\n    },\n    addNetworkServiceProvider (args) {\n      return new Promise((resolve, reject) => {\n        let message = ''\n        api('addNetworkServiceProvider', args).then(async json => {\n          const jobId = json.addnetworkserviceproviderresponse.jobid\n          if (jobId) {\n            const result = await this.pollJob(jobId)\n            if (result.jobstatus === 2) {\n              message = result.jobresult.errortext\n              reject(message)\n              return\n            }\n            resolve(result.jobresult.networkserviceprovider)\n          }\n        }).catch(error => {\n          message = (error.response && error.response.headers && error.response.headers['x-description']) || error.message\n          reject(message)\n        })\n      })\n    },\n    async pollJob (jobId) {\n      return new Promise(resolve => {\n        const asyncJobInterval = setInterval(() => {\n          api('queryAsyncJobResult', { jobId }).then(async json => {\n            const result = json.queryasyncjobresultresponse\n            if (result.jobstatus === 0) {\n              return\n            }\n\n            clearInterval(asyncJobInterval)\n            resolve(result)\n          })\n        }, 1000)\n      })\n    },\n    executeAction (action) {\n      this.currentAction = action\n      if (this.currentAction.confirm) {\n        this.$confirm({\n          title: this.$t('label.confirmation'),\n          content: this.$t(action.confirm),\n          onOk: this.handleSubmit\n        })\n      } else {\n        this.showFormAction = true\n        if (!action.component) {\n          const apiParams = store.getters.apis[action.api].params || []\n          this.currentAction.fieldParams = action.args.map(arg => {\n            const field = apiParams.filter(param => param.name === arg)[0]\n            if (field.type === 'uuid') {\n              this.listFieldOpts(field)\n            }\n            return field\n          }) || []\n          if (this.currentAction.api === 'addCiscoVnmcResource') {\n            this.currentAction.method = 'POST'\n          }\n        }\n      }\n    },\n    listFieldOpts (field) {\n      const paramName = field.name\n      const params = { listall: true }\n      const possibleName = 'list' + paramName.replace('ids', '').replace('id', '').toLowerCase() + 's'\n      let possibleApi\n      for (const api in store.getters.apis) {\n        if (api.toLowerCase().startsWith(possibleName)) {\n          possibleApi = api\n          break\n        }\n      }\n      if (this.currentAction.mapping) {\n        Object.keys(this.currentAction.mapping).forEach(key => {\n          if (this.currentAction.mapping[key].params) {\n            params[key] = this.currentAction.mapping[key].params(this.resource)\n          }\n        })\n      }\n      if (!possibleApi) {\n        return\n      }\n      field.loading = true\n      field.opts = []\n      api(possibleApi, params).then(json => {\n        field.loading = false\n        for (const obj in json) {\n          if (obj.includes('response')) {\n            for (const res in json[obj]) {\n              if (res === 'count') {\n                continue\n              }\n              field.opts = json[obj][res]\n              this.$forceUpdate()\n              break\n            }\n            break\n          }\n        }\n      }).catch(error => {\n        console.log(error.stack)\n        field.loading = false\n      })\n    },\n    async executeConfirmAction () {\n      const params = {}\n      params.id = this.nsp.id\n      if (this.currentAction.mapping) {\n        for (const key in this.currentAction.mapping) {\n          if (!this.currentAction.mapping[key].value) {\n            continue\n          }\n          params[key] = this.currentAction.mapping[key].value(this.resource, params)\n        }\n      }\n      this.actionLoading = true\n\n      try {\n        const hasJobId = await this.executeApi(this.currentAction.api, params)\n        if (!hasJobId) {\n          await this.fetchData()\n        }\n        this.actionLoading = false\n        this.onCloseAction()\n      } catch (message) {\n        this.actionLoading = false\n        this.$notification.error({\n          message: this.$t('message.request.failed'),\n          description: message\n        })\n      }\n    },\n    executeApi (apiName, args, method) {\n      return new Promise((resolve, reject) => {\n        let hasJobId = false\n        let message = ''\n        const promise = (method === 'POST') ? api(apiName, {}, method, args) : api(apiName, args)\n        promise.then(json => {\n          for (const obj in json) {\n            if (obj.includes('response') || obj.includes(apiName)) {\n              for (const res in json[obj]) {\n                if (res === 'jobid') {\n                  this.$store.dispatch('AddAsyncJob', {\n                    title: this.$t(this.currentAction.label),\n                    jobid: json[obj][res],\n                    description: this.$t(this.nsp.name),\n                    status: 'progress'\n                  })\n                  this.parentPollActionCompletion(json[obj][res], this.currentAction)\n                  hasJobId = true\n                  break\n                }\n              }\n              break\n            }\n          }\n\n          resolve(hasJobId)\n        }).catch(error => {\n          message = (error.response && error.response.headers && error.response.headers['x-description']) || error.message\n          reject(message)\n        })\n      })\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServiceProvidersTab.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServiceProvidersTab.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ServiceProvidersTab.vue?vue&type=template&id=49cd216a&\"\nimport script from \"./ServiceProvidersTab.vue?vue&type=script&lang=js&\"\nexport * from \"./ServiceProvidersTab.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProviderListView.vue?vue&type=style&index=0&id=3f49cdb1&scoped=true&lang=less&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProviderListView.vue?vue&type=style&index=0&id=3f49cdb1&scoped=true&lang=less&\""],"sourceRoot":""}